{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { PacienteService } from '../../../services/paciente.service';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DialogNotaVozComponent } from './dialog-nota-voz.component';\nimport { NotasVozService } from '../../../services/notas-voz.service';\nimport { DialogGrabarNotaVozComponent } from './dialog-grabar-nota-voz.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/table\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/progress-spinner\";\nimport * as i12 from \"@angular/material/button\";\nfunction NotasVozPorPacienteComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const paciente_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", paciente_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", paciente_r2.Apellido, \", \", paciente_r2.Nombre, \" \");\n  }\n}\nfunction NotasVozPorPacienteComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelement(1, \"mat-spinner\", 25);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Cargando turnos...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotasVozPorPacienteComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"mat-icon\", 27);\n    i0.ɵɵtext(2, \"event_busy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h3\");\n    i0.ɵɵtext(4, \"No hay turnos registrados para este paciente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Selecciona un paciente para ver sus turnos y notas de voz\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \"Fecha\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const turno_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, turno_r3.Fecha || turno_r3.fecha, \"dd/MM/yyyy\"));\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \"Hora\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const turno_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(turno_r4.Hora || turno_r4.hora);\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \"Nota de voz\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_9_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 41);\n    i0.ɵɵtext(1, \"volume_up\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_9_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 42);\n    i0.ɵɵtext(1, \"volume_off\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtemplate(1, NotasVozPorPacienteComponent_table_25_td_9_mat_icon_1_Template, 2, 0, \"mat-icon\", 39)(2, NotasVozPorPacienteComponent_table_25_td_9_mat_icon_2_Template, 2, 0, \"mat-icon\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const turno_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", turno_r5.ID_NotaVoz || turno_r5.id_nota_voz);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !(turno_r5.ID_NotaVoz || turno_r5.id_nota_voz));\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \"Acciones\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_12_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function NotasVozPorPacienteComponent_table_25_td_12_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const turno_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.abrirDialogNotaVoz(turno_r7));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"visibility\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_12_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function NotasVozPorPacienteComponent_table_25_td_12_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const turno_r7 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onGrabarNotaVoz(turno_r7));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"mic\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtemplate(1, NotasVozPorPacienteComponent_table_25_td_12_button_1_Template, 3, 0, \"button\", 43)(2, NotasVozPorPacienteComponent_table_25_td_12_button_2_Template, 3, 0, \"button\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const turno_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", turno_r7.ID_NotaVoz || turno_r7.id_nota_voz);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !(turno_r7.ID_NotaVoz || turno_r7.id_nota_voz));\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 47);\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 48);\n  }\n}\nfunction NotasVozPorPacienteComponent_table_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 28);\n    i0.ɵɵelementContainerStart(1, 29);\n    i0.ɵɵtemplate(2, NotasVozPorPacienteComponent_table_25_th_2_Template, 2, 0, \"th\", 30)(3, NotasVozPorPacienteComponent_table_25_td_3_Template, 3, 4, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 32);\n    i0.ɵɵtemplate(5, NotasVozPorPacienteComponent_table_25_th_5_Template, 2, 0, \"th\", 30)(6, NotasVozPorPacienteComponent_table_25_td_6_Template, 2, 1, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 33);\n    i0.ɵɵtemplate(8, NotasVozPorPacienteComponent_table_25_th_8_Template, 2, 0, \"th\", 30)(9, NotasVozPorPacienteComponent_table_25_td_9_Template, 3, 2, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 34);\n    i0.ɵɵtemplate(11, NotasVozPorPacienteComponent_table_25_th_11_Template, 2, 0, \"th\", 30)(12, NotasVozPorPacienteComponent_table_25_td_12_Template, 3, 2, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(13, NotasVozPorPacienteComponent_table_25_tr_13_Template, 1, 0, \"tr\", 35)(14, NotasVozPorPacienteComponent_table_25_tr_14_Template, 1, 0, \"tr\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r7.turnos);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r7.displayedColumns);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r7.displayedColumns);\n  }\n}\nfunction NotasVozPorPacienteComponent_div_28_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", ctx_r7.pacienteSeleccionado.Nombre, \" \", ctx_r7.pacienteSeleccionado.Apellido, \"\");\n  }\n}\nfunction NotasVozPorPacienteComponent_div_28_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" con fecha \");\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(4, 1, ctx_r7.sesionSeleccionada.Fecha || ctx_r7.sesionSeleccionada.fecha, \"dd/MM/yyyy\"));\n  }\n}\nfunction NotasVozPorPacienteComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 49)(1, \"h3\");\n    i0.ɵɵtext(2, \" Transcripci\\u00F3n de la nota de la sesi\\u00F3n de \");\n    i0.ɵɵtemplate(3, NotasVozPorPacienteComponent_div_28_span_3_Template, 2, 2, \"span\", 50)(4, NotasVozPorPacienteComponent_div_28_ng_container_4_Template, 5, 4, \"ng-container\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\", 51)(6, \"textarea\", 52);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function NotasVozPorPacienteComponent_div_28_Template_textarea_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r7 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r7.transcripcion, $event) || (ctx_r7.transcripcion = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 53)(8, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function NotasVozPorPacienteComponent_div_28_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.guardarEdicionNotaVoz());\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \" Guardar Edici\\u00F3n \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function NotasVozPorPacienteComponent_div_28_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.limpiarFormulario());\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"clear\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" Limpiar \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.pacienteSeleccionado);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.sesionSeleccionada);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r7.transcripcion);\n  }\n}\nexport let NotasVozPorPacienteComponent = /*#__PURE__*/(() => {\n  class NotasVozPorPacienteComponent {\n    constructor(dialog, route) {\n      this.pacienteControl = new FormControl('');\n      this.pacientes = [];\n      this.pacientesFiltrados = [];\n      this.pacienteSeleccionado = null;\n      this.turnos = [];\n      this.displayedColumns = ['fecha', 'hora', 'notaVoz', 'acciones'];\n      this.isLoading = false;\n      this.pacienteService = inject(PacienteService);\n      this.sesionSeleccionada = null;\n      this.transcripcion = '';\n      this.idNotaVoz = null;\n      this.notasVozService = inject(NotasVozService);\n      this.dialog = dialog;\n      this.route = route;\n    }\n    ngOnInit() {\n      const shortname = localStorage.getItem('username');\n      if (shortname) {\n        this.pacienteService.obtenerPacientesPorProfesional(shortname).subscribe(pacientes => {\n          this.pacientes = pacientes;\n          this.pacientesFiltrados = pacientes;\n          // Selección automática por query param\n          this.route.queryParams.subscribe(params => {\n            const pacienteId = params['pacienteId'];\n            if (pacienteId) {\n              const paciente = pacientes.find(p => p.ID == pacienteId || p.id == pacienteId);\n              if (paciente) {\n                this.pacienteControl.setValue(paciente);\n                this.onPacienteSeleccionado({\n                  option: {\n                    value: paciente\n                  }\n                });\n              }\n            }\n          });\n        });\n      }\n      this.pacienteControl.valueChanges.pipe(debounceTime(300), switchMap(value => {\n        if (typeof value === 'string' && value.length > 1) {\n          const filtro = value.toLowerCase();\n          return of(this.pacientes.filter(p => `${p.Nombre} ${p.Apellido}`.toLowerCase().includes(filtro) || `${p.Apellido} ${p.Nombre}`.toLowerCase().includes(filtro)));\n        } else {\n          return of([]);\n        }\n      })).subscribe(pacientes => {\n        this.pacientesFiltrados = pacientes;\n      });\n    }\n    displayPaciente(paciente) {\n      return paciente ? `${paciente.Apellido}, ${paciente.Nombre}` : '';\n    }\n    onPacienteSeleccionado(event) {\n      const paciente = event.option.value;\n      this.pacienteSeleccionado = paciente;\n      if (paciente && paciente.ID) {\n        this.pacienteService.obtenerTurnosPorPaciente(paciente.ID).subscribe(turnos => {\n          // Filtrar solo los turnos en estado Asistido (5)\n          this.turnos = (turnos || []).filter(t => t.EstadoTurno === 'Asistido' || t.EstadoTurno === 5 || t.estado === 'Asistido' || t.estado === 5).map(t => ({\n            ...t,\n            tieneNotaVoz: !!(t.ID_NotaVoz || t.id_nota_voz)\n          }));\n        });\n      } else {\n        this.turnos = [];\n      }\n    }\n    editarNotaVoz(turno) {\n      // Lógica para editar la nota de voz\n    }\n    cargarNotaVoz(idNotaVoz, sesion) {\n      if (!idNotaVoz) return;\n      if (sesion) {\n        this.sesionSeleccionada = sesion;\n      }\n      // Aquí deberías llamar a tu servicio de notas de voz para obtener la transcripción\n      // Ejemplo:\n      // this.notasVozService.obtenerNotaVoz(idNotaVoz).subscribe(resp => {\n      //   this.transcripcion = resp.texto;\n      //   this.idNotaVoz = idNotaVoz;\n      // });\n      // Por ahora, simula:\n      this.transcripcion = 'Transcripción de ejemplo para la nota de voz.';\n      this.idNotaVoz = idNotaVoz;\n    }\n    guardarEdicionNotaVoz() {\n      if (!this.idNotaVoz || !this.transcripcion) return;\n      // Aquí deberías llamar a tu servicio para guardar la transcripción editada\n      // this.notasVozService.actualizarNotaVoz(this.idNotaVoz, this.transcripcion).subscribe(...)\n      alert('Transcripción guardada (simulado)');\n    }\n    limpiarFormulario() {\n      this.transcripcion = '';\n      this.idNotaVoz = null;\n      this.sesionSeleccionada = null;\n    }\n    abrirDialogNotaVoz(turno) {\n      // Determinar el ID correcto de la nota de voz\n      const idNotaVoz = turno.ID_NotaVoz || turno.id_nota_voz;\n      console.log('Intentando obtener nota de voz para ID:', idNotaVoz, 'Turno:', turno);\n      if (!idNotaVoz) {\n        alert('No hay nota de voz asociada a este turno.');\n        return;\n      }\n      // Mostrar loading mientras se obtiene la nota\n      const dialogRef = this.dialog.open(DialogNotaVozComponent, {\n        data: {\n          turno,\n          paciente: this.pacienteSeleccionado,\n          transcripcion: '',\n          loading: true\n        },\n        width: '600px'\n      });\n      this.notasVozService.obtenerNotaVoz(idNotaVoz).subscribe({\n        next: resp => {\n          console.log('Respuesta obtenerNotaVoz:', resp);\n          dialogRef.componentInstance.transcripcion = resp.texto || resp.transcripcion || resp.text || '';\n          dialogRef.componentInstance.loading = false;\n        },\n        error: () => {\n          dialogRef.componentInstance.transcripcion = '';\n          dialogRef.componentInstance.loading = false;\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result && result.transcripcion !== undefined) {\n          turno.transcripcion = result.transcripcion;\n        }\n      });\n    }\n    onGrabarNotaVoz(turno) {\n      const dialogRef = this.dialog.open(DialogGrabarNotaVozComponent, {\n        data: {\n          turno,\n          paciente: this.pacienteSeleccionado\n        },\n        width: '500px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          // Si se grabó una nota de voz, refrescar los turnos del paciente\n          if (this.pacienteSeleccionado && this.pacienteSeleccionado.ID) {\n            this.pacienteService.obtenerTurnosPorPaciente(this.pacienteSeleccionado.ID).subscribe(turnos => {\n              this.turnos = (turnos || []).map(t => ({\n                ...t,\n                tieneNotaVoz: !!(t.ID_NotaVoz || t.id_nota_voz)\n              }));\n            });\n          }\n        }\n      });\n    }\n    static {\n      this.ɵfac = function NotasVozPorPacienteComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NotasVozPorPacienteComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NotasVozPorPacienteComponent,\n        selectors: [[\"app-notas-voz-por-paciente\"]],\n        decls: 29,\n        vars: 8,\n        consts: [[\"autoPaciente\", \"matAutocomplete\"], [1, \"pacientes-container\"], [1, \"header-section\"], [1, \"header-content\"], [1, \"title-section\"], [1, \"page-title\"], [1, \"title-icon\"], [1, \"page-subtitle\"], [1, \"search-card\"], [1, \"search-section\"], [\"appearance\", \"outline\", 1, \"search-field\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [3, \"optionSelected\", \"displayWith\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matSuffix\", \"\"], [1, \"table-card\"], [1, \"table-container\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"empty-state\", 4, \"ngIf\"], [\"mat-table\", \"\", \"class\", \"patients-table\", 3, \"dataSource\", 4, \"ngIf\"], [1, \"notasvoz-layout\"], [1, \"col-izq\"], [\"class\", \"col-der\", 4, \"ngIf\"], [3, \"value\"], [1, \"loading-container\"], [\"diameter\", \"40\"], [1, \"empty-state\"], [1, \"empty-icon\"], [\"mat-table\", \"\", 1, \"patients-table\", 3, \"dataSource\"], [\"matColumnDef\", \"fecha\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"hora\"], [\"matColumnDef\", \"notaVoz\"], [\"matColumnDef\", \"acciones\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"style\", \"color: #388e3c;\", 4, \"ngIf\"], [\"style\", \"color: #e53935;\", 4, \"ngIf\"], [2, \"color\", \"#388e3c\"], [2, \"color\", \"#e53935\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"col-der\"], [4, \"ngIf\"], [\"appearance\", \"outline\", 1, \"textarea-transcripcion\"], [\"matInput\", \"\", \"rows\", \"12\", 3, \"ngModelChange\", \"ngModel\"], [2, \"display\", \"flex\", \"gap\", \"12px\", \"margin-top\", \"12px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"botones\", 3, \"click\"]],\n        template: function NotasVozPorPacienteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"h1\", 5)(5, \"mat-icon\", 6);\n            i0.ɵɵtext(6, \"graphic_eq\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(7, \" Notas de Voz por Paciente \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"p\", 7);\n            i0.ɵɵtext(9, \"Consulta los turnos y notas de voz asociadas a cada paciente\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(10, \"mat-card\", 8)(11, \"div\", 9)(12, \"mat-form-field\", 10)(13, \"mat-label\");\n            i0.ɵɵtext(14, \"Buscar paciente\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 11);\n            i0.ɵɵelementStart(16, \"mat-autocomplete\", 12, 0);\n            i0.ɵɵlistener(\"optionSelected\", function NotasVozPorPacienteComponent_Template_mat_autocomplete_optionSelected_16_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onPacienteSeleccionado($event));\n            });\n            i0.ɵɵtemplate(18, NotasVozPorPacienteComponent_mat_option_18_Template, 2, 3, \"mat-option\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"mat-icon\", 14);\n            i0.ɵɵtext(20, \"search\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(21, \"mat-card\", 15)(22, \"div\", 16);\n            i0.ɵɵtemplate(23, NotasVozPorPacienteComponent_div_23_Template, 4, 0, \"div\", 17)(24, NotasVozPorPacienteComponent_div_24_Template, 7, 0, \"div\", 18)(25, NotasVozPorPacienteComponent_table_25_Template, 15, 3, \"table\", 19);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(26, \"div\", 20);\n            i0.ɵɵelement(27, \"div\", 21);\n            i0.ɵɵtemplate(28, NotasVozPorPacienteComponent_div_28_Template, 16, 3, \"div\", 22);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            const autoPaciente_r11 = i0.ɵɵreference(17);\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"formControl\", ctx.pacienteControl)(\"matAutocomplete\", autoPaciente_r11);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"displayWith\", ctx.displayPaciente);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.pacientesFiltrados);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.turnos.length === 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.turnos.length > 0);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.sesionSeleccionada);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.DatePipe, MatFormFieldModule, i4.MatFormField, i4.MatLabel, i4.MatSuffix, MatInputModule, i5.MatInput, MatAutocompleteModule, i6.MatAutocomplete, i6.MatOption, i6.MatAutocompleteTrigger, MatIconModule, i7.MatIcon, MatTableModule, i8.MatTable, i8.MatHeaderCellDef, i8.MatHeaderRowDef, i8.MatColumnDef, i8.MatCellDef, i8.MatRowDef, i8.MatHeaderCell, i8.MatCell, i8.MatHeaderRow, i8.MatRow, ReactiveFormsModule, i9.DefaultValueAccessor, i9.NgControlStatus, i9.FormControlDirective, MatCardModule, i10.MatCard, MatProgressSpinnerModule, i11.MatProgressSpinner, FormsModule, i9.NgModel, MatButtonModule, i12.MatButton, i12.MatIconButton],\n        styles: [\".pacientes-container[_ngcontent-%COMP%]{padding:24px;max-width:1400px;margin:0 auto}.header-section[_ngcontent-%COMP%]{margin-bottom:24px}.header-section[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:16px}.header-section[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title-section[_ngcontent-%COMP%]   .page-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;margin:0 0 8px;font-size:28px;font-weight:600;color:#333}.header-section[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title-section[_ngcontent-%COMP%]   .page-title[_ngcontent-%COMP%]   .title-icon[_ngcontent-%COMP%]{color:#aa262b;font-size:32px}.header-section[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title-section[_ngcontent-%COMP%]   .page-subtitle[_ngcontent-%COMP%]{margin:0;color:#666;font-size:16px}.search-card[_ngcontent-%COMP%]{margin-bottom:24px;border-radius:12px;box-shadow:0 4px 12px #0000000d}.search-card[_ngcontent-%COMP%]   .search-section[_ngcontent-%COMP%]{padding:16px}.search-card[_ngcontent-%COMP%]   .search-section[_ngcontent-%COMP%]   .search-field[_ngcontent-%COMP%]{width:100%;max-width:400px}.table-card[_ngcontent-%COMP%]{border-radius:12px;box-shadow:0 4px 12px #0000000d;overflow:hidden}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]{position:relative;min-height:400px}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .loading-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:60px 20px;gap:16px}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .loading-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#666;margin:0}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:60px 20px;text-align:center}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-icon[_ngcontent-%COMP%]{font-size:64px;color:#ccc;margin-bottom:16px}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0 0 8px;color:#333;font-weight:500}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0 0 24px;color:#666}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]{width:100%}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]   .mat-mdc-header-cell[_ngcontent-%COMP%]{background-color:#f8f9fa;font-weight:600;color:#333;padding:16px 12px}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]   .mat-mdc-cell[_ngcontent-%COMP%]{padding:16px 12px;border-bottom:1px solid #f0f0f0}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]   .patient-row[_ngcontent-%COMP%]{cursor:pointer;transition:background-color .2s ease}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]   .patient-row[_ngcontent-%COMP%]:hover{background-color:#f8f9fa}.table-card[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .patients-table[_ngcontent-%COMP%]   .patient-row[_ngcontent-%COMP%]:last-child   .mat-mdc-cell[_ngcontent-%COMP%]{border-bottom:none}.notasvoz-layout[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:32px;align-items:flex-start;margin-top:32px}.col-izq[_ngcontent-%COMP%]{min-width:340px;max-width:500px;flex:1}.col-der[_ngcontent-%COMP%]{flex:1;min-width:340px}.textarea-transcripcion[_ngcontent-%COMP%]{width:100%;min-width:250px;margin-bottom:8px;height:100%;max-height:400px}.botones[_ngcontent-%COMP%]{margin-top:8px!important;min-width:150px!important;font-weight:700!important;font-size:14px!important;border-radius:8px!important;padding:16px!important;background-color:#d0cfcf!important}\"]\n      });\n    }\n  }\n  return NotasVozPorPacienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}