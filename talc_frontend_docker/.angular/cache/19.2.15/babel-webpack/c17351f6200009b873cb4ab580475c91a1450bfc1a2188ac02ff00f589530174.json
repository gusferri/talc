{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../services/notas-voz.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nfunction DialogGrabarNotaVozComponent_mat_icon_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"mic\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DialogGrabarNotaVozComponent_mat_icon_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"stop\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DialogGrabarNotaVozComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Grabando... \", i0.ɵɵpipeBind3(3, 1, ctx_r0.elapsed, \"mm:ss\", \"UTC\"), \" \");\n  }\n}\nfunction DialogGrabarNotaVozComponent_audio_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"audio\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.audioUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport let DialogGrabarNotaVozComponent = /*#__PURE__*/(() => {\n  class DialogGrabarNotaVozComponent {\n    constructor(dialogRef, data, notasVozService, snackBar) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.notasVozService = notasVozService;\n      this.snackBar = snackBar;\n      this.isRecording = false;\n      this.audioChunks = [];\n      this.audioBlob = null;\n      this.audioUrl = null;\n      this.mediaRecorder = null;\n      this.saving = false;\n      this.elapsed = 0;\n      this.timer = null;\n    }\n    toggleRecording() {\n      if (this.isRecording) {\n        this.stopRecording();\n      } else {\n        this.startRecording();\n      }\n    }\n    startRecording() {\n      this.audioChunks = [];\n      this.audioBlob = null;\n      this.audioUrl = null;\n      this.elapsed = 0;\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        this.mediaRecorder = new window.MediaRecorder(stream);\n        this.mediaRecorder.start();\n        this.isRecording = true;\n        this.timer = setInterval(() => this.elapsed += 1000, 1000);\n        this.mediaRecorder.ondataavailable = e => {\n          this.audioChunks.push(e.data);\n        };\n        this.mediaRecorder.onstop = () => {\n          this.audioBlob = new Blob(this.audioChunks, {\n            type: 'audio/webm'\n          });\n          this.audioUrl = URL.createObjectURL(this.audioBlob);\n          this.isRecording = false;\n          clearInterval(this.timer);\n        };\n      }).catch(() => {\n        this.snackBar.open('No se pudo acceder al micrófono.', 'Cerrar', {\n          duration: 3000\n        });\n      });\n    }\n    stopRecording() {\n      if (this.mediaRecorder && this.isRecording) {\n        this.mediaRecorder.stop();\n      }\n    }\n    guardar() {\n      if (!this.audioBlob) return;\n      this.saving = true;\n      this.notasVozService.subirNotaVoz(this.data.turno.ID || this.data.turno.id_turno, this.audioBlob).subscribe({\n        next: () => {\n          this.saving = false;\n          this.snackBar.open('Nota de voz guardada correctamente.', 'Cerrar', {\n            duration: 2500\n          });\n          this.dialogRef.close(true);\n        },\n        error: () => {\n          this.saving = false;\n          this.snackBar.open('Error al guardar la nota de voz.', 'Cerrar', {\n            duration: 4000\n          });\n        }\n      });\n    }\n    cerrar() {\n      this.dialogRef.close();\n    }\n    static {\n      this.ɵfac = function DialogGrabarNotaVozComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DialogGrabarNotaVozComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.NotasVozService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DialogGrabarNotaVozComponent,\n        selectors: [[\"app-dialog-grabar-nota-voz\"]],\n        decls: 32,\n        vars: 13,\n        consts: [[1, \"dialog-wrapper\"], [\"mat-dialog-title\", \"\", 1, \"dialog-title\"], [1, \"info\"], [1, \"paciente\"], [1, \"fecha\"], [1, \"hora\"], [1, \"recorder-section\"], [\"mat-fab\", \"\", \"color\", \"warn\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"rec-indicator\", 4, \"ngIf\"], [\"controls\", \"\", \"style\", \"margin-top: 16px;\", 3, \"src\", 4, \"ngIf\"], [1, \"dialog-actions\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 3, \"click\", \"disabled\"], [\"mat-button\", \"\", 3, \"click\", \"disabled\"], [1, \"rec-indicator\"], [1, \"dot\"], [\"controls\", \"\", 2, \"margin-top\", \"16px\", 3, \"src\"]],\n        template: function DialogGrabarNotaVozComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n            i0.ɵɵtext(2, \"Grabar nueva nota de voz\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2)(4, \"span\", 3)(5, \"mat-icon\");\n            i0.ɵɵtext(6, \"person\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"span\", 4)(9, \"mat-icon\");\n            i0.ɵɵtext(10, \"event\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(11);\n            i0.ɵɵpipe(12, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"span\", 5)(14, \"mat-icon\");\n            i0.ɵɵtext(15, \"schedule\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(16);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 6)(18, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function DialogGrabarNotaVozComponent_Template_button_click_18_listener() {\n              return ctx.toggleRecording();\n            });\n            i0.ɵɵtemplate(19, DialogGrabarNotaVozComponent_mat_icon_19_Template, 2, 0, \"mat-icon\", 8)(20, DialogGrabarNotaVozComponent_mat_icon_20_Template, 2, 0, \"mat-icon\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, DialogGrabarNotaVozComponent_div_21_Template, 4, 5, \"div\", 9)(22, DialogGrabarNotaVozComponent_audio_22_Template, 1, 1, \"audio\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"div\", 11)(24, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function DialogGrabarNotaVozComponent_Template_button_click_24_listener() {\n              return ctx.guardar();\n            });\n            i0.ɵɵelementStart(25, \"mat-icon\");\n            i0.ɵɵtext(26, \"save\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(27, \" Guardar \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"button\", 13);\n            i0.ɵɵlistener(\"click\", function DialogGrabarNotaVozComponent_Template_button_click_28_listener() {\n              return ctx.cerrar();\n            });\n            i0.ɵɵelementStart(29, \"mat-icon\");\n            i0.ɵɵtext(30, \"close\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(31, \" Cancelar \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵtextInterpolate2(\" \", ctx.data.paciente == null ? null : ctx.data.paciente.Apellido, \", \", ctx.data.paciente == null ? null : ctx.data.paciente.Nombre, \"\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(12, 10, ctx.data.turno.Fecha || ctx.data.turno.fecha, \"dd/MM/yyyy\"), \"\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", ctx.data.turno.Hora || ctx.data.turno.hora, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isRecording);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isRecording);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isRecording);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.audioUrl);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", !ctx.audioBlob || ctx.saving);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.saving);\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, i4.DatePipe, MatButtonModule, i5.MatButton, i5.MatFabButton, MatIconModule, i6.MatIcon],\n        styles: [\".dialog-wrapper[_ngcontent-%COMP%]{max-width:500px;min-width:350px;padding:32px 24px 20px;box-sizing:border-box}.dialog-title[_ngcontent-%COMP%]{font-size:1.4rem;font-weight:600;margin-bottom:.5rem;color:#333}.info[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:18px;margin-bottom:18px;font-size:1rem;color:#555;align-items:center}.info[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:18px;vertical-align:middle;margin-right:4px;color:#aa262b}.recorder-section[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-bottom:18px}.rec-indicator[_ngcontent-%COMP%]{margin-top:12px;color:#c62828;font-weight:500;display:flex;align-items:center;gap:8px}.dot[_ngcontent-%COMP%]{width:12px;height:12px;background:#c62828;border-radius:50%;display:inline-block;animation:_ngcontent-%COMP%_blink 1s infinite}@keyframes _ngcontent-%COMP%_blink{0%,to{opacity:1}50%{opacity:.2}}.dialog-actions[_ngcontent-%COMP%]{margin-top:18px;display:flex;gap:12px;justify-content:flex-end}button[mat-stroked-button][_ngcontent-%COMP%]{font-weight:500;min-width:120px}button[mat-button][_ngcontent-%COMP%]{min-width:90px}\"]\n      });\n    }\n  }\n  return DialogGrabarNotaVozComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}