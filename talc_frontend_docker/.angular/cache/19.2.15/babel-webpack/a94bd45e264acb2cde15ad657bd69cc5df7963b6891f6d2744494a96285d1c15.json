{"ast":null,"code":"import { signal } from '@angular/core';\nimport { defaults } from '../config';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CoreService = /*#__PURE__*/(() => {\n  class CoreService {\n    constructor() {\n      this.optionsSignal = signal(defaults);\n      this.notify$ = new BehaviorSubject({});\n      this.notify$.next(this.optionsSignal());\n    }\n    // Observable for notification updates\n    get notify() {\n      return this.notify$.asObservable();\n    }\n    // Get the current options\n    getOptions() {\n      return this.optionsSignal();\n    }\n    setOptions(options) {\n      this.optionsSignal.update(current => ({\n        ...current,\n        ...options\n      }));\n      this.notify$.next(this.optionsSignal);\n    }\n    static {\n      this.ɵfac = function CoreService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CoreService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CoreService,\n        factory: CoreService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}