{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../services/paciente.service\";\nimport * as i4 from \"../../../services/ubicacion.service\";\nimport * as i5 from \"../../../services/obra-social.service\";\nimport * as i6 from \"../../../services/escuela.service\";\nimport * as i7 from \"../../../services/genero.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/progress-spinner\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/material/autocomplete\";\nimport * as i16 from \"@angular/material/slide-toggle\";\nfunction DetallePacienteComponent_mat_card_0_mat_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const genero_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", genero_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", genero_r1.Genero, \" \");\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_mat_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const provincia_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", provincia_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", provincia_r2.Provincia, \" \");\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_mat_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ciudad_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ciudad_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ciudad_r3.Ciudad, \" \");\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_div_61_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const escuela_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", escuela_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", escuela_r4.Nombre, \" \");\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"mat-form-field\", 8)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Escuela\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 30);\n    i0.ɵɵelementStart(5, \"mat-autocomplete\", 16, 2);\n    i0.ɵɵtemplate(7, DetallePacienteComponent_mat_card_0_div_61_mat_option_7_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const escuelaAuto_r5 = i0.ɵɵreference(6);\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matAutocomplete\", escuelaAuto_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"displayWith\", ctx_r5.mostrarNombreEscuela);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.escuelasFiltradas);\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_div_65_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const obra_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", obra_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", obra_r7.Nombre, \" \");\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"mat-form-field\", 8)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Obra Social\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 31);\n    i0.ɵɵelementStart(5, \"mat-autocomplete\", 16, 3);\n    i0.ɵɵtemplate(7, DetallePacienteComponent_mat_card_0_div_65_mat_option_7_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const obraSocialAuto_r8 = i0.ɵɵreference(6);\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matAutocomplete\", obraSocialAuto_r8);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"displayWith\", ctx_r5.mostrarNombreObraSocial);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.obrasSocialesFiltradas);\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_button_72_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function DetallePacienteComponent_mat_card_0_button_72_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.habilitarEdicion());\n    });\n    i0.ɵɵtext(1, \"Editar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_button_73_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function DetallePacienteComponent_mat_card_0_button_73_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.guardarCambios());\n    });\n    i0.ɵɵtext(1, \"Guardar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_button_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function DetallePacienteComponent_mat_card_0_button_74_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.cancelarEdicion());\n    });\n    i0.ɵɵtext(1, \"Cancelar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DetallePacienteComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Detalle de Paciente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 5)(5, \"div\", 6)(6, \"div\", 7)(7, \"mat-form-field\", 8)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"DNI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 7)(12, \"mat-form-field\", 8)(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Apellido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 7)(17, \"mat-form-field\", 8)(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 7)(22, \"mat-form-field\", 8)(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Fecha de Nacimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 7)(27, \"mat-form-field\", 8)(28, \"mat-label\");\n    i0.ɵɵtext(29, \"G\\u00E9nero\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"mat-select\", 13);\n    i0.ɵɵtemplate(31, DetallePacienteComponent_mat_card_0_mat_option_31_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 7)(33, \"mat-form-field\", 8)(34, \"mat-label\");\n    i0.ɵɵtext(35, \"Provincia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(36, \"input\", 15);\n    i0.ɵɵelementStart(37, \"mat-autocomplete\", 16, 0);\n    i0.ɵɵtemplate(39, DetallePacienteComponent_mat_card_0_mat_option_39_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(40, \"div\", 7)(41, \"mat-form-field\", 8)(42, \"mat-label\");\n    i0.ɵɵtext(43, \"Ciudad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(44, \"input\", 17);\n    i0.ɵɵelementStart(45, \"mat-autocomplete\", 16, 1);\n    i0.ɵɵtemplate(47, DetallePacienteComponent_mat_card_0_mat_option_47_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(48, \"div\", 7)(49, \"mat-form-field\", 8)(50, \"mat-label\");\n    i0.ɵɵtext(51, \"Tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"input\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(53, \"div\", 7)(54, \"mat-form-field\", 8)(55, \"mat-label\");\n    i0.ɵɵtext(56, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(57, \"input\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(58, \"div\", 20)(59, \"mat-slide-toggle\", 21);\n    i0.ɵɵtext(60, \" \\u00BFEst\\u00E1 escolarizado? \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(61, DetallePacienteComponent_mat_card_0_div_61_Template, 8, 3, \"div\", 22);\n    i0.ɵɵelementStart(62, \"div\", 20)(63, \"mat-slide-toggle\", 23);\n    i0.ɵɵtext(64, \" \\u00BFTiene obra social? \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(65, DetallePacienteComponent_mat_card_0_div_65_Template, 8, 3, \"div\", 22);\n    i0.ɵɵelementStart(66, \"div\", 20)(67, \"mat-form-field\", 8)(68, \"mat-label\");\n    i0.ɵɵtext(69, \"Observaciones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(70, \"textarea\", 24);\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(71, \"mat-card-actions\", 25);\n    i0.ɵɵtemplate(72, DetallePacienteComponent_mat_card_0_button_72_Template, 2, 0, \"button\", 26)(73, DetallePacienteComponent_mat_card_0_button_73_Template, 2, 0, \"button\", 27)(74, DetallePacienteComponent_mat_card_0_button_74_Template, 2, 0, \"button\", 28);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_11_0;\n    let tmp_12_0;\n    const provinciaAuto_r12 = i0.ɵɵreference(38);\n    const ciudadAuto_r13 = i0.ɵɵreference(46);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r5.pacienteForm);\n    i0.ɵɵadvance(27);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.generos);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matAutocomplete\", provinciaAuto_r12);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"displayWith\", ctx_r5.mostrarNombreProvincia);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.provinciasFiltradas);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matAutocomplete\", ciudadAuto_r13);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"displayWith\", ctx_r5.mostrarNombreCiudad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.ciudadesFiltradas);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngIf\", (tmp_11_0 = ctx_r5.pacienteForm.get(\"estaEscolarizado\")) == null ? null : tmp_11_0.value);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", (tmp_12_0 = ctx_r5.pacienteForm.get(\"tieneObraSocial\")) == null ? null : tmp_12_0.value);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.isEditing);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isEditing);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isEditing);\n  }\n}\nfunction DetallePacienteComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\");\n    i0.ɵɵelement(2, \"mat-spinner\");\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Cargando datos del paciente...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let DetallePacienteComponent = /*#__PURE__*/(() => {\n  class DetallePacienteComponent {\n    constructor(route, fb, pacienteService, ubicacionService, obraSocialService, escuelaService, generoService) {\n      this.route = route;\n      this.fb = fb;\n      this.pacienteService = pacienteService;\n      this.ubicacionService = ubicacionService;\n      this.obraSocialService = obraSocialService;\n      this.escuelaService = escuelaService;\n      this.generoService = generoService;\n      this.isLoading = true;\n      this.isEditing = false;\n      this.pacienteId = null;\n      // Catálogos\n      this.generos = [];\n      this.provincias = [];\n      this.ciudades = [];\n      this.escuelas = [];\n      this.obrasSociales = [];\n      // Filtrados para autocompletes\n      this.provinciasFiltradas = [];\n      this.ciudadesFiltradas = [];\n      this.escuelasFiltradas = [];\n      this.obrasSocialesFiltradas = [];\n      this.pacienteForm = this.fb.group({\n        dni: [{\n          value: '',\n          disabled: true\n        }, [Validators.required]],\n        apellido: [{\n          value: '',\n          disabled: true\n        }, [Validators.required]],\n        nombre: [{\n          value: '',\n          disabled: true\n        }, [Validators.required]],\n        fechaNacimiento: [{\n          value: '',\n          disabled: true\n        }, [Validators.required]],\n        genero: [{\n          value: '',\n          disabled: true\n        }],\n        provincia: [{\n          value: '',\n          disabled: true\n        }],\n        ciudad: [{\n          value: '',\n          disabled: true\n        }],\n        estaEscolarizado: [{\n          value: false,\n          disabled: true\n        }],\n        escuela: [{\n          value: '',\n          disabled: true\n        }],\n        tieneObraSocial: [{\n          value: false,\n          disabled: true\n        }],\n        obraSocial: [{\n          value: '',\n          disabled: true\n        }],\n        telefono: [{\n          value: '',\n          disabled: true\n        }],\n        email: [{\n          value: '',\n          disabled: true\n        }],\n        observaciones: [{\n          value: '',\n          disabled: true\n        }]\n      });\n    }\n    ngOnInit() {\n      this.pacienteId = this.route.snapshot.paramMap.get('id');\n      if (this.pacienteId) {\n        this.cargarCatalogosYDespuesPaciente(this.pacienteId);\n      }\n      this.setupFormListeners();\n    }\n    cargarCatalogosYDespuesPaciente(dni) {\n      this.isLoading = true;\n      forkJoin({\n        generos: this.generoService.obtenerGeneros(),\n        provincias: this.ubicacionService.obtenerProvincias(),\n        ciudades: this.ubicacionService.obtenerCiudades(),\n        obrasSociales: this.obraSocialService.obtenerObrasSociales(),\n        escuelas: this.escuelaService.obtenerEscuelas()\n      }).subscribe({\n        next: catalogos => {\n          this.generos = catalogos.generos;\n          this.provincias = catalogos.provincias;\n          this.provinciasFiltradas = catalogos.provincias;\n          this.ciudades = catalogos.ciudades;\n          this.ciudadesFiltradas = catalogos.ciudades;\n          this.obrasSociales = catalogos.obrasSociales;\n          this.obrasSocialesFiltradas = catalogos.obrasSociales;\n          this.escuelas = catalogos.escuelas;\n          this.escuelasFiltradas = catalogos.escuelas;\n          // Ahora sí cargar el paciente\n          this.pacienteService.buscarPacientes(dni).subscribe({\n            next: pacientes => {\n              if (pacientes && pacientes.length > 0) {\n                const paciente = pacientes[0];\n                // Determinar provincia a partir de ciudad si es necesario\n                let provinciaObj = this.provincias.find(p => p.ID === paciente.ID_Provincia) || '';\n                let ciudadObj = this.ciudades.find(c => c.ID === paciente.ID_Ciudad) || '';\n                if (ciudadObj && ciudadObj.ID_Provincia) {\n                  provinciaObj = this.provincias.find(p => p.ID === ciudadObj.ID_Provincia) || provinciaObj;\n                }\n                const escuelaObj = this.escuelas.find(e => e.ID === paciente.ID_Escuela) || '';\n                const obraSocialObj = this.obrasSociales.find(o => o.ID === paciente.ID_ObraSocial) || '';\n                const generoObj = this.generos.find(g => g.ID === paciente.ID_Genero) || '';\n                const pacienteFormValue = {\n                  dni: paciente.DNI,\n                  apellido: paciente.Apellido,\n                  nombre: paciente.Nombre,\n                  fechaNacimiento: paciente.FechaNacimiento,\n                  genero: generoObj,\n                  provincia: provinciaObj,\n                  ciudad: ciudadObj,\n                  estaEscolarizado: !!paciente.ID_Escuela,\n                  escuela: escuelaObj,\n                  tieneObraSocial: !!paciente.ID_ObraSocial,\n                  obraSocial: obraSocialObj,\n                  telefono: paciente.Telefono,\n                  email: paciente.Email,\n                  observaciones: paciente.Observaciones\n                };\n                this.pacienteForm.patchValue(pacienteFormValue);\n                // Forzar filtrado de ciudades para la provincia seleccionada\n                if (provinciaObj) {\n                  this.filtrarCiudades(ciudadObj?.Ciudad || '');\n                }\n              }\n              this.isLoading = false;\n            },\n            error: error => {\n              console.error('Error al cargar paciente:', error);\n              this.isLoading = false;\n            }\n          });\n        },\n        error: error => {\n          console.error('Error al cargar catálogos:', error);\n          this.isLoading = false;\n        }\n      });\n    }\n    setupFormListeners() {\n      this.pacienteForm.get('provincia')?.valueChanges.subscribe(value => {\n        this.filtrarProvincias(value);\n      });\n      this.pacienteForm.get('ciudad')?.valueChanges.subscribe(value => {\n        this.filtrarCiudades(value);\n      });\n      this.pacienteForm.get('escuela')?.valueChanges.subscribe(value => {\n        this.filtrarEscuelas(value);\n      });\n      this.pacienteForm.get('obraSocial')?.valueChanges.subscribe(value => {\n        this.filtrarObrasSociales(value);\n      });\n      this.pacienteForm.get('estaEscolarizado')?.valueChanges.subscribe(value => {\n        if (this.isEditing && value) {\n          this.pacienteForm.get('escuela')?.enable();\n        } else {\n          this.pacienteForm.get('escuela')?.disable();\n          this.pacienteForm.get('escuela')?.setValue('');\n        }\n      });\n      this.pacienteForm.get('tieneObraSocial')?.valueChanges.subscribe(value => {\n        if (this.isEditing && value) {\n          this.pacienteForm.get('obraSocial')?.enable();\n        } else {\n          this.pacienteForm.get('obraSocial')?.disable();\n          this.pacienteForm.get('obraSocial')?.setValue('');\n        }\n      });\n    }\n    // Métodos de filtrado para autocompletes (idénticos a nuevo-paciente)\n    filtrarProvincias(value) {\n      if (!value) {\n        this.provinciasFiltradas = this.provincias;\n        return;\n      }\n      // Si value es string, usarlo; si es objeto, usar value.Provincia\n      const filterValue = typeof value === 'string' ? value.toLowerCase() : (value.Provincia || '').toLowerCase();\n      this.provinciasFiltradas = this.provincias.filter(provincia => provincia.Provincia.toLowerCase().includes(filterValue));\n    }\n    filtrarCiudades(value) {\n      const provincia = this.pacienteForm.get('provincia')?.value;\n      if (!provincia || !value) {\n        this.ciudadesFiltradas = [];\n        return;\n      }\n      this.ubicacionService.buscarCiudadesPorProvincia(provincia.ID, value).subscribe({\n        next: ciudades => {\n          this.ciudadesFiltradas = ciudades;\n        },\n        error: error => {\n          console.error('Error al buscar ciudades:', error);\n          this.ciudadesFiltradas = [];\n        }\n      });\n    }\n    filtrarEscuelas(value) {\n      const ciudad = this.pacienteForm.get('ciudad')?.value;\n      if (!ciudad || !value) {\n        this.escuelasFiltradas = [];\n        return;\n      }\n      this.escuelaService.buscarEscuelasPorCiudad(ciudad.ID, value).subscribe({\n        next: escuelas => {\n          this.escuelasFiltradas = escuelas;\n        },\n        error: error => {\n          console.error('Error al buscar escuelas:', error);\n          this.escuelasFiltradas = [];\n        }\n      });\n    }\n    filtrarObrasSociales(value) {\n      if (!value) {\n        this.obrasSocialesFiltradas = this.obrasSociales;\n        return;\n      }\n      this.obraSocialService.buscarObrasSociales(value).subscribe({\n        next: os => {\n          this.obrasSocialesFiltradas = os;\n        },\n        error: error => {\n          console.error('Error al buscar obras sociales:', error);\n          this.obrasSocialesFiltradas = [];\n        }\n      });\n    }\n    habilitarEdicion() {\n      this.isEditing = true;\n      this.pacienteForm.enable();\n    }\n    cancelarEdicion() {\n      this.isEditing = false;\n      this.pacienteForm.disable();\n    }\n    guardarCambios() {\n      if (this.pacienteForm.valid) {\n        const formValue = this.pacienteForm.value;\n        const pacienteActualizado = {\n          dni: formValue.dni,\n          apellido: formValue.apellido,\n          nombre: formValue.nombre,\n          fechaNacimiento: formValue.fechaNacimiento,\n          idGenero: formValue.genero?.ID || null,\n          idProvincia: formValue.provincia?.ID || null,\n          idCiudad: formValue.ciudad?.ID || null,\n          idEscuela: formValue.escuela?.ID || null,\n          idObraSocial: formValue.obraSocial?.ID || null,\n          telefono: formValue.telefono,\n          email: formValue.email,\n          observaciones: formValue.observaciones\n        };\n        this.pacienteService.actualizarPaciente(this.pacienteId, pacienteActualizado).subscribe({\n          next: response => {\n            console.log('Paciente actualizado:', response);\n            this.isEditing = false;\n            this.pacienteForm.disable();\n          },\n          error: error => {\n            console.error('Error al actualizar paciente:', error);\n          }\n        });\n      }\n    }\n    mostrarNombreProvincia(provincia) {\n      return provincia?.Provincia || '';\n    }\n    mostrarNombreCiudad(ciudad) {\n      return ciudad?.Ciudad || '';\n    }\n    mostrarNombreEscuela(escuela) {\n      return escuela?.Nombre || '';\n    }\n    mostrarNombreObraSocial(obra) {\n      return obra?.Nombre || '';\n    }\n    static {\n      this.ɵfac = function DetallePacienteComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DetallePacienteComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PacienteService), i0.ɵɵdirectiveInject(i4.UbicacionService), i0.ɵɵdirectiveInject(i5.ObraSocialService), i0.ɵɵdirectiveInject(i6.EscuelaService), i0.ɵɵdirectiveInject(i7.GeneroService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DetallePacienteComponent,\n        selectors: [[\"app-detalle-paciente\"]],\n        decls: 2,\n        vars: 2,\n        consts: [[\"provinciaAuto\", \"matAutocomplete\"], [\"ciudadAuto\", \"matAutocomplete\"], [\"escuelaAuto\", \"matAutocomplete\"], [\"obraSocialAuto\", \"matAutocomplete\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-12\", \"col-md-6\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", \"formControlName\", \"dni\"], [\"matInput\", \"\", \"formControlName\", \"apellido\"], [\"matInput\", \"\", \"formControlName\", \"nombre\"], [\"matInput\", \"\", \"formControlName\", \"fechaNacimiento\"], [\"formControlName\", \"genero\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"provincia\", 3, \"matAutocomplete\"], [3, \"displayWith\"], [\"matInput\", \"\", \"formControlName\", \"ciudad\", 3, \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"telefono\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [1, \"col-12\", \"col-md-12\"], [\"formControlName\", \"estaEscolarizado\", 1, \"toggle-field\"], [\"class\", \"col-12 col-md-6\", 4, \"ngIf\"], [\"formControlName\", \"tieneObraSocial\", 1, \"toggle-field\"], [\"matInput\", \"\", \"formControlName\", \"observaciones\", \"rows\", \"3\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"escuela\", 3, \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"obraSocial\", 3, \"matAutocomplete\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n        template: function DetallePacienteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, DetallePacienteComponent_mat_card_0_Template, 75, 13, \"mat-card\", 4)(1, DetallePacienteComponent_mat_card_1_Template, 5, 0, \"mat-card\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          }\n        },\n        dependencies: [CommonModule, i8.NgForOf, i8.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, MatCardModule, i9.MatCard, i9.MatCardActions, i9.MatCardContent, i9.MatCardTitle, MatButtonModule, i10.MatButton, MatFormFieldModule, i11.MatFormField, i11.MatLabel, MatInputModule, i12.MatInput, MatIconModule, MatProgressSpinnerModule, i13.MatProgressSpinner, MatSelectModule, i14.MatSelect, i15.MatOption, MatAutocompleteModule, i15.MatAutocomplete, i15.MatAutocompleteTrigger, MatSlideToggleModule, i16.MatSlideToggle],\n        styles: [\".w-100[_ngcontent-%COMP%]{width:100%}.row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:16px}.col-12[_ngcontent-%COMP%]{flex:0 0 100%;max-width:100%}.col-md-6[_ngcontent-%COMP%]{flex:0 0 48%;max-width:48%}@media (max-width: 768px){.col-md-6[_ngcontent-%COMP%]{flex:0 0 100%;max-width:100%}}mat-card-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:8px}\"]\n      });\n    }\n  }\n  return DetallePacienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}