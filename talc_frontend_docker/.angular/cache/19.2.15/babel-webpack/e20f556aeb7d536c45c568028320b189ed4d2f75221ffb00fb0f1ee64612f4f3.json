{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PacienteService = /*#__PURE__*/(() => {\n  class PacienteService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiBaseUrl}/pacientes`;\n    }\n    displayPaciente(paciente) {\n      return paciente ? `${paciente.Apellido}, ${paciente.Nombre}` : '';\n    }\n    obtenerTurnosPorPacienteFormateados(idPaciente) {\n      return this.obtenerTurnosPorPaciente(idPaciente).pipe(map(turnos => turnos.filter(t => t.Fecha && t.Hora).map(t => {\n        const startDateTime = new Date(`${t.Fecha}T${t.Hora.length === 5 ? t.Hora + ':00' : t.Hora}`);\n        const mostrarIconoNotaVoz = startDateTime < new Date();\n        return {\n          title: t.Especialidad ? `${t.Especialidad}` : 'Turno',\n          estado: t.EstadoTurno || '',\n          start: `${t.Fecha}T${t.Hora.length === 5 ? t.Hora + ':00' : t.Hora}`,\n          allDay: false,\n          cantidadNotasVoz: t.CantidadNotasVoz || 0,\n          mostrarIconoNotaVoz\n        };\n      })));\n    }\n    buscarPacientes(query) {\n      return this.http.get(`${this.apiUrl}/buscarPacientes`, {\n        params: {\n          query\n        }\n      });\n    }\n    insertarPaciente(paciente) {\n      return this.http.post(`${this.apiUrl}/grabarPaciente`, paciente);\n    }\n    actualizarPaciente(dni, paciente) {\n      return this.http.put(`${this.apiUrl}/actualizarPaciente/${dni}`, paciente);\n    }\n    adjuntarArchivo(formData) {\n      return this.http.post(`${this.apiUrl}/adjuntos`, formData);\n    }\n    esProfesionalPorShortname(shortname) {\n      return this.http.get(`${this.apiUrl}/esProfesionalPorShortname?shortname=${shortname}`);\n    }\n    obtenerPacientesPorProfesional(shortname) {\n      return this.http.get(`${this.apiUrl}/profesional?shortname=${shortname}`);\n    }\n    obtenerTurnosPorPaciente(idPaciente) {\n      const username = localStorage.getItem('username') || '';\n      return this.http.get(`${this.apiUrl}/turnosPorPaciente`, {\n        params: {\n          id_paciente: idPaciente,\n          username\n        }\n      });\n    }\n    obtenerProfesionalPorUsername(username) {\n      return this.http.get(`${this.apiUrl}/obtenerProfesionalPorUsername`, {\n        params: {\n          username\n        }\n      });\n    }\n    obtenerTurnos() {\n      const username = localStorage.getItem('username') || '';\n      return this.http.get(`${this.apiUrl}/turnos`, {\n        params: {\n          username\n        }\n      });\n    }\n    obtenerPacientePorId(id) {\n      return this.http.get(`${this.apiUrl}/buscarPorId`, {\n        params: {\n          id\n        }\n      });\n    }\n    obtenerPacientes() {\n      return this.http.get(`${environment.apiBaseUrl}/pacientes/completo`);\n    }\n    static {\n      this.ɵfac = function PacienteService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PacienteService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: PacienteService,\n        factory: PacienteService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PacienteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}