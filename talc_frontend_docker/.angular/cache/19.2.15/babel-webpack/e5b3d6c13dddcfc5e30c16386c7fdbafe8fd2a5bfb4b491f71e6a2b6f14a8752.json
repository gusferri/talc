{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { MaterialModule } from 'src/app/material.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/core.service\";\nimport * as i2 from \"@angular/cdk/bidi\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  cardBorder: a0\n});\nexport let BlankComponent = /*#__PURE__*/(() => {\n  class BlankComponent {\n    constructor(settings) {\n      this.settings = settings;\n      this.options = this.settings.getOptions();\n      this.htmlElement = document.querySelector('html');\n      // Initialize project theme with options\n      this.receiveOptions(this.options);\n    }\n    receiveOptions(options) {\n      this.toggleDarkTheme(options);\n      this.toggleColorsTheme(options);\n    }\n    toggleDarkTheme(options) {\n      if (options.theme === 'dark') {\n        this.htmlElement.classList.add('dark-theme');\n        this.htmlElement.classList.remove('light-theme');\n      } else {\n        this.htmlElement.classList.remove('dark-theme');\n        this.htmlElement.classList.add('light-theme');\n      }\n    }\n    toggleColorsTheme(options) {\n      // Remove any existing theme class dynamically\n      this.htmlElement.classList.forEach(className => {\n        if (className.endsWith('_theme')) {\n          this.htmlElement.classList.remove(className);\n        }\n      });\n      // Add the selected theme class\n      this.htmlElement.classList.add(options.activeTheme);\n    }\n    static {\n      this.ɵfac = function BlankComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BlankComponent)(i0.ɵɵdirectiveInject(i1.CoreService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: BlankComponent,\n        selectors: [[\"app-blank\"]],\n        decls: 2,\n        vars: 4,\n        consts: [[3, \"ngClass\", \"dir\"]],\n        template: function BlankComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0);\n            i0.ɵɵelement(1, \"router-outlet\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx.options.cardBorder))(\"dir\", ctx.options.dir);\n          }\n        },\n        dependencies: [RouterOutlet, MaterialModule, i2.Dir, i3.MatSidenavContainer, CommonModule, i4.NgClass],\n        encapsulation: 2\n      });\n    }\n  }\n  return BlankComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}